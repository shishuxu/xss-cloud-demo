spring:
    shardingsphere:
        datasource:
            db0:
#                driver-class-name: com.mysql.jdbc.Driver
                jdbc-url: jdbc:mysql://localhost:3306/shardinghere?useUnicode=true&charactorEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true
                password: 123456
                type: com.zaxxer.hikari.HikariDataSource
                username: root
                maxPoolsize: 100 #连接池大小
                minPoolSize: 5
            db1:
#                driver-class-name: com.mysql.jdbc.Driver
                jdbc-url: jdbc:mysql://123.56.95.104:3306/shardinghere?useUnicode=true&charactorEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true
                password: 123456
                type: com.zaxxer.hikari.HikariDataSource
                username: root
                maxPoolsize: 100 #连接池大小
                minPoolSize: 5
            names: db0,db1

        props:  #控制台打印执行sql、
            sql:
                show: true
        sharding:
            #            默认数据源，没有设置分片规则的表会走这个数据源，否则会走多数据源到多个库（主库）
            default-data-source-name: db0
            tables:
                #                分表不分库
                orders:
                    actual-data-nodes: db$->{0}.orders_$->{1..4} #配置orders表在哪个库，哪个真实表中
                    key-generator:
                        column: id   #分片键
                        type: SNOWFLAKE   #主键算法
                    table-strategy:  #                        分片算法： 精确分片算法
                        inline:
                            algorithm-expression: orders_${id%4+1}    #分片算法： 精确分片算法
                            sharding-column: id   #分片键

